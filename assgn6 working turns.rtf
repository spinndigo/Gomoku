{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Assignment 6 functioning server/client code:\
\
\
server code:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf0 \CocoaLigature0 void *subserver(void *game) \{\
    char *html_file;\
    struct bothsocks *players;\
    players = game;\
    char *msg;\
    int html_file_fd, i;\
    int read_count = -1;\
    int BUFFERSIZE = 256;\
    char buffer[BUFFERSIZE+1];\
    int len,bytes_sent, bytes_recv;\
    long reply_sock_fd_long1 = (long) players->replyfd1;\
    long reply_sock_fd_long2 = (long) players->replyfd2;\
    int reply_sock_fd1 = (int) reply_sock_fd_long1;\
    int reply_sock_fd2 = (int) reply_sock_fd_long2;\
    \
    printf("subserver ID = %ld\\n", (unsigned long) pthread_self());\
    bytes_recv = recv(reply_sock_fd1, buffer, (BUFFERSIZE+1), 0); // the GET thing\
    strcpy(buffer, "Welcome to Gomoku!\\n");\
    bytes_sent = send(reply_sock_fd1, buffer, (BUFFERSIZE+1), 0);\
    bytes_sent = send(reply_sock_fd2, buffer, (BUFFERSIZE+1), 0);\
    while(bytes_recv != 0)\{  // CONDITION SHOULD BE WHILE GAME IS NOT OVER\
       for(i = 1; i<=2; i++)\{\
         if( i==1)\{\
            strcpy(buffer, "It is your turn\\n");  \
            bytes_sent = send(reply_sock_fd1, buffer, (BUFFERSIZE+1), 0);\
            bytes_recv = recv(reply_sock_fd1, buffer, (BUFFERSIZE+1), 0);\
            printf("Player 1 : %s\\n", buffer);\
         \}\
         else\{ \
               strcpy(buffer, "It is your turn\\n");\
            bytes_sent = send(reply_sock_fd2, buffer, (BUFFERSIZE+1), 0); bytes_recv = recv(reply_sock_fd2, buffer, (BUFFERSIZE+1), 0);\
            printf("Player 2 : %s\\n", buffer);\
         \}\
    \}\
\}   \
\
\
client code:\
\
\
void web_browser(int http_conn, char *http_request) \{\
    int numbytes = 0;\
    int i, bytes_sent, bytes_recv;\
    char buf[BUFFERSIZE+1];\
    char *message;\
    // step 4.1: send the HTTP request\
    bytes_sent = send(http_conn, http_request, strlen(http_request), 0);\
    printf("right before message send\\n");\
    bytes_recv = recv(http_conn, buf, (BUFFERSIZE+1), 0); // bis message\
       \
    \
    bytes_recv = recv(http_conn, buf, (BUFFERSIZE+1), 0);\
    printf("%s", buf); // WELCOME\
    while(bytes_sent != 0)\{\
        bytes_recv = recv(http_conn, buf, (BUFFERSIZE+1), 0);    // YOUR TURN\
        printf("%s", buf);\
        scanf("%s", buf);\
        bytes_sent = send(http_conn, buf, (BUFFERSIZE+1), 0);\
        \}\
 \
\
    exit(0);\
\}\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}